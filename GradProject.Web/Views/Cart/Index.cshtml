@model IEnumerable<GradProject.Web.Models.CartItem>

@{
    ViewBag.Title = "Cart";

    // مجموع سطر واحد
    Func<GradProject.Web.Models.CartItem, decimal> rowTotal =
        ci => (ci.Product != null ? ci.Product.Price : 0m) * ci.Quantity;

    // المجموع الكلي
    decimal grandTotal = Model != null ? Model.Sum(rowTotal) : 0m;

    // تنسيق USD
    Func<decimal, string> usd = val =>
        string.Format(System.Globalization.CultureInfo.GetCultureInfo("en-US"), "{0:C}", val);
}

<h2>Cart</h2>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-info">
        Your cart is empty.
        @Html.ActionLink("Browse products", "Index", "Products", null, new { @class = "alert-link" })
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead class="table-light">
                <tr>
                    <th style="width:60px">#</th>
                    <th>Product</th>
                    <th style="width:140px" class="text-end">Price (USD)</th>
                    <th style="width:200px" class="text-center">Quantity</th>
                    <th style="width:160px" class="text-end">Subtotal (USD)</th>
                    <th style="width:200px">Actions</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var i = 1;
                }
                @foreach (var item in Model)
                {
                    var price = item.Product != null ? item.Product.Price : 0m;
                    <tr>
                        <td>@(i++)</td>

                        <td>
                            @((item.Product != null) ? item.Product.Name : "—")
                            @if (!string.IsNullOrWhiteSpace(item.Product?.Description))
                            {
                                <div class="text-muted small">@item.Product.Description</div>
                            }
                        </td>

                        <td class="text-end">
                            @(item.Product != null ? usd(price) : "—")
                        </td>

                        <td class="text-center">
                            <div class="d-inline-flex align-items-center">
                                @using (Html.BeginForm("Decrease", "Cart", FormMethod.Post, new { @class = "d-inline" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("id", item.Id)
                                    <button type="submit" class="btn btn-sm btn-outline-secondary">−</button>
                                }

                                <span class="btn btn-sm btn-light disabled mx-2" style="min-width:48px">@item.Quantity</span>

                                @using (Html.BeginForm("Increase", "Cart", FormMethod.Post, new { @class = "d-inline" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("id", item.Id)
                                    <button type="submit" class="btn btn-sm btn-outline-secondary">+</button>
                                }
                            </div>
                        </td>

                        <td class="text-end">
                            @usd(rowTotal(item))
                        </td>

                        <td>
                            @using (Html.BeginForm("Remove", "Cart", FormMethod.Post, new { @class = "d-inline" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("id", item.Id)
                                <button type="submit" class="btn btn-sm btn-danger">Remove</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>

            <tfoot>
                <tr>
                    <th colspan="4" class="text-end">Total</th>
                    <th class="text-end">@usd(grandTotal)</th>
                    <th>
                        <div class="d-inline-block me-2">
                            @using (Html.BeginForm("Clear", "Cart", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-warning">Clear Cart</button>
                            }
                        </div>
                        @Html.ActionLink("Checkout", "Checkout", "Cart", null, new { @class = "btn btn-sm btn-primary" })
                    </th>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="mt-3">
        @Html.ActionLink("Continue Shopping", "Index", "Products", null, new { @class = "btn btn-outline-primary" })
    </div>
}

@section scripts {
    @* لا شيء خاص الآن *@
}
