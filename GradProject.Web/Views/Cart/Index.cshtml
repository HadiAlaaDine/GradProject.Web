@model IEnumerable<GradProject.Web.Models.CartItem>

@{
    ViewBag.Title = "Cart";
    Func<GradProject.Web.Models.CartItem, decimal> rowTotal =
        ci => (ci.Product != null ? ci.Product.Price : 0m) * ci.Quantity;
    decimal grandTotal = Model != null ? Model.Sum(rowTotal) : 0m;

    // دالة مساعدة لتنسيق العملة بالدولار
    Func<decimal, string> usd = val => string.Format(System.Globalization.CultureInfo.GetCultureInfo("en-US"), "{0:C}", val);
}

<h2>Cart</h2>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-info">
        Your cart is empty.
        @Html.ActionLink("Browse products", "Index", "Products", null, new { @class = "alert-link" })
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead class="table-light">
                <tr>
                    <th style="width:60px">#</th>
                    <th>Product</th>
                    <th style="width:120px" class="text-end">Price (USD)</th>
                    <th style="width:160px" class="text-center">Quantity</th>
                    <th style="width:140px" class="text-end">Subtotal (USD)</th>
                    <th style="width:200px">Actions</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var i = 1;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@(i++)</td>
                        <td>
                            @((item.Product != null) ? item.Product.Name : "—")
                            @if (!string.IsNullOrWhiteSpace(item.Product?.Description))
                            {
                                <div class="text-muted small">@item.Product.Description</div>
                            }
                        </td>

                        <td class="text-end">
                            @((item.Product != null) ? usd(item.Product.Price) : "—")
                        </td>

                        <td class="text-center">
                            <div class="btn-group btn-group-sm" role="group" aria-label="qty">
                                @Html.ActionLink("-", "Decrease", "Cart", new { id = item.Id }, new { @class = "btn btn-outline-secondary" })
                                <span class="btn btn-light disabled" style="min-width:48px">@item.Quantity</span>
                                @Html.ActionLink("+", "Increase", "Cart", new { id = item.Id }, new { @class = "btn btn-outline-secondary" })
                            </div>
                        </td>

                        <td class="text-end">
                            @usd(rowTotal(item))
                        </td>

                        <td>
                            @Html.ActionLink("Remove", "Remove", "Cart", new { id = item.Id }, new { @class = "btn btn-sm btn-danger" })
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <th colspan="4" class="text-end">Total</th>
                    <th class="text-end">@usd(grandTotal)</th>
                    <th>
                        @Html.ActionLink("Clear Cart", "Clear", "Cart", null, new { @class = "btn btn-sm btn-warning" })
                    </th>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="mt-3">
        @Html.ActionLink("Continue Shopping", "Index", "Products", null, new { @class = "btn btn-outline-primary" })
        @* زر Checkout نضيفه لاحقًا *@
    </div>
}

@section scripts {
    @* لا شيء خاص الآن. لو ضفنا Ajax لاحقًا منضيف سكريبت *@
}
